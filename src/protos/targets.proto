syntax = "proto3";

package targets;

import "color.proto";
import "controller.proto";
import "types.proto";

message Comparison {
  message LessThan {
    int32 value = 1;
  }
  message LessThanOrEqual {
    int32 value = 1;
  }
  message GreaterThan {
    int32 value = 1;
  }
  message GreaterThanOrEqual {
    int32 value = 1;
  }

  oneof value {
    LessThan less_than = 1;
    LessThanOrEqual less_than_or_equal = 2;
    GreaterThan greater_than = 3;
    GreaterThanOrEqual greater_than_or_equal = 4;
  }
}

message Dynamic {
  message X {}

  oneof dynamic {
    X x = 1;
  }
}

message SpellTarget {
  controller.Controller controller = 1;
  repeated types.Type types = 2;
  repeated types.Subtype subtypes = 3;
}

message Restriction {
  message AttackingOrBlocking {}
  message CastFromHand {}
  message Cmc {
    oneof cmc {
      Dynamic dynamic = 1;
      Comparison comparison = 2;
    }
  }
  message ControllerControlsBlackOrGreen {}
  message ControllerHandEmpty {}
  message NotOfType {
    repeated types.Type types = 1;
    repeated types.Subtype subtypes = 2;
  }
  message NotSelf {}
  message OfColor {
    repeated color.Color colors = 1;
  }
  message OfType {
    repeated types.Type types = 1;
    repeated types.Subtype subtypes = 2;
  }
  message Self {}
  message Toughness {
    Comparison comparison = 1;
  }
  message OnBattlefield {}
  message InGraveyard {}

  oneof restriction {
    AttackingOrBlocking attacking_or_blocking = 1;
    CastFromHand cast_from_hand = 2;
    Cmc cmc = 3;
    ControllerControlsBlackOrGreen controller_controls_black_or_green = 4;
    ControllerHandEmpty controller_hand_empty = 5;
    InGraveyard in_graveyard = 6;
    NotOfType not_of_type = 7;
    NotSelf not_self = 8;
    OfColor of_color = 9;
    OfType of_type = 10;
    OnBattlefield on_battlefield = 11;
    Self self = 12;
    Toughness toughness = 13;
  }
}