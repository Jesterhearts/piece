syntax = "proto3";

package effects;

import "color.proto";
import "controller.proto";
import "cost.proto";
import "counters.proto";
import "mana.proto";
import "targets.proto";
import "types.proto";

message GainMana {
  message GainMana {
    repeated mana.Mana gains = 1;
  }
  message Specific {
    repeated mana.Mana gains = 1;
  }
  message Choice {
    repeated GainMana choices = 1;
  }

  oneof gain {
    Specific specific = 1;
    Choice choice = 2;
  }
}

message GainManaAbility {
  cost.AbilityCost cost = 1;
  GainMana gain_mana = 2;
}

message ActivatedAbility {
  cost.AbilityCost cost = 1;
  repeated Effect effects = 2;
  bool apply_to_self = 3;
  string oracle_text = 4;
}

message Destination {
  message Hand {
  }
  message TopOfLibrary {
  }
  message Battlefield {
    bool enters_tapped = 1;
  }

  oneof destination {
    Hand hand = 2;
    TopOfLibrary top_of_library = 3;
    Battlefield battlefield = 4;
  }
}

message TutorLibrary {
  repeated targets.Restriction restrictions = 1;
  Destination destination = 2;
  bool reveal = 3;
}

message Mill {
  int32 count = 1;
  controller.Controller target = 2;
}

message ReturnFromGraveyardToLibrary {
  int32 count = 1;
  controller.Controller controller = 2;
  repeated types.Type types = 3;
}

message ReturnFromGraveyardToBattlefield {
  int32 count = 1;
  repeated types.Type types = 2;
}

message Duration {
  message UntilEndOfTurn {}
  message UntilSourceLeavesBattlefield {}
  message UntilTargetLeavesBattlefield {}

  oneof duration {
    UntilEndOfTurn until_end_of_turn = 1;
    UntilSourceLeavesBattlefield until_source_leaves_battlefield = 2;
    UntilTargetLeavesBattlefield until_target_leaves_battlefield = 3;
  }
}

message CounterSpell {
  targets.SpellTarget valid_target = 1;
}

message ExtraLandsPerTurn {
  int32 count = 1;
}

message DynamicPowerToughness {
  oneof source {
    NumberOfCountersOnThis number_of_counters_on_this = 1;
  }

  message NumberOfCountersOnThis {
    counters.Counter counter = 1;
  }
}

message ModifyBattlefield {
  optional int32 base_power = 1;
  optional int32 base_toughness = 2;

  optional DynamicPowerToughness add_dynamic_power_toughness = 3;

  repeated types.Type add_types = 4;
  repeated types.Subtype add_subtypes = 5;

  repeated types.Type remove_types = 6;
  repeated types.Subtype remove_subtypes = 7;

  repeated color.Color add_colors = 8;

  bool remove_all_colors = 9;

  optional int32 add_power = 10;
  optional int32 add_toughness = 11;

  optional ActivatedAbility add_ability = 12;
  optional GainManaAbility mana_ability = 13;

  bool remove_all_subtypes = 14;

  bool entire_battlefield = 15;
  bool global = 16;

  string add_keywords = 17;
  string remove_keywords = 18;
}

message BattlefieldModifier {
  ModifyBattlefield modifier = 1;
  controller.Controller controller = 2;
  Duration duration = 3;
  repeated targets.Restriction restrictions = 4;
}

message CreateToken {
  oneof token {
    Creature creature = 1;
  }

  message Creature {
    string name = 1;
    repeated types.Type types = 2;
    repeated types.Subtype subtypes = 3;
    repeated color.Color colors = 4;
    int32 power = 5;
    int32 toughness = 6;

    string keywords = 7;
  }
}

message ControllerDrawCards {
  int32 count = 1;
}

message Equip {
  repeated ModifyBattlefield modifiers = 1;
}

message ExileTargetCreature {
}

message ExileTargetCreatureManifestTopOfLibrary {
}

message DealDamage {
  int32 quantity = 1;
  repeated targets.Restriction restrictions = 2;
}

message GainCounter {
  message Single {
    counters.Counter counter = 1;
  }
  message Dynamic {
    message X {
      counters.Counter counter = 1;
    }
    oneof dynamic {
      X x = 2;
    }
  }

  oneof counter {
    Single single = 3;
    Dynamic dynamic = 4;
  }
}

message ControllerLosesLife {
  int32 count = 1;
}

message CopyOfAnyCreatureNonTargeting { }

message CreateTokenCopy {
  repeated ModifyBattlefield modifiers = 1;
}

message ReturnSelfToHand { }

message RevealEachTopOfLibrary {
  message ForEach {
    message IfNone {
      repeated Effect effects = 1;
    }

    repeated targets.Restriction restrictions = 2;
    repeated Effect effects = 3;
    IfNone if_none = 4;
  }

  ForEach for_each = 5;
}

message UntapThis {}
message UntapTarget {}

message Cascade {}

message TargetToTopOfLibrary {
  repeated targets.Restriction restrictions = 1;
}

message Effect {
  oneof effect {
    BattlefieldModifier battlefield_modifier = 1;
    BattlefieldModifier modify_target = 2;
    Cascade cascade = 3;
    ControllerDrawCards controller_draw_cards = 4;
    ControllerLosesLife controller_loses_life = 5;
    CopyOfAnyCreatureNonTargeting copy_of_any_creature_non_targeting = 6;
    CounterSpell counter_spell = 7;
    CreateToken create_token = 8;
    CreateTokenCopy create_token_copy = 9;
    DealDamage deal_damage = 10;
    Equip equip = 11;
    ExileTargetCreature exile_target_creature = 12;
    ExileTargetCreatureManifestTopOfLibrary exile_target_creature_manifest_top_of_library = 13;
    GainCounter gain_counter = 14;
    GainCounter target_gains_counters = 15;
    Mill mill = 16;
    ReturnFromGraveyardToBattlefield return_from_graveyard_to_battlefield = 17;
    ReturnFromGraveyardToLibrary return_from_graveyard_to_library = 18;
    ReturnSelfToHand return_self_to_hand = 19;
    RevealEachTopOfLibrary reveal_each_top_of_library = 20;
    TargetToTopOfLibrary target_to_top_of_library = 21;
    TutorLibrary tutor_library = 22;
    UntapThis untap_this = 23;
    UntapTarget untap_target = 24;
  }

  optional Effect threshold = 25;
  string oracle_text = 26;
}

message ReplacementEffect {
  message Draw {
  }
  message Etb {
  }

  oneof replacing {
    Draw draw = 1;
    Etb etb = 2;
  }

  repeated targets.Restriction restrictions = 3;
  repeated Effect effects = 4;
}