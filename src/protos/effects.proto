syntax = "proto3";

package effects;

import "color.proto";
import "controller.proto";
import "cost.proto";
import "counters.proto";
import "mana.proto";
import "targets.proto";
import "types.proto";

message ActivatedAbility {
  cost.AbilityCost cost = 1;
  repeated Effect effects = 2;
  bool apply_to_self = 3;
  string oracle_text = 4;
  bool sorcery_speed = 5;
  bool craft = 6;
}

message BattlefieldModifier {
  ModifyBattlefield modifier = 1;
  controller.Controller controller = 2;
  Duration duration = 3;
  repeated targets.Restriction restrictions = 4;
}

message CantAttackThisTurn {
  repeated targets.Restriction restrictions = 1;
}

message Cascade {}

message ControllerDrawCards {
  int32 count = 1;
}

message ControllerLosesLife {
  int32 count = 1;
}

message CopyOfAnyCreatureNonTargeting {}

message CounterSpell {
  targets.SpellTarget valid_target = 1;
}

message CreateToken {
  message Creature {
    string name = 1;
    repeated types.Type types = 2;
    repeated types.Subtype subtypes = 3;
    repeated color.Color colors = 4;
    optional DynamicPowerToughness dynamic_power_toughness = 5;
    int32 power = 6;
    int32 toughness = 7;
    string keywords = 8;
  }
  message Map {}

  oneof token {
    Creature creature = 1;
    Map map = 2;
  }
}

message CreateTokenCopy {
  repeated ModifyBattlefield modifiers = 1;
}

message Cycling {
  repeated types.Type types = 1;
  repeated types.Subtype subtypes = 2;
}

message DealDamage {
  int32 quantity = 1;
  optional controller.Controller controller = 2;
  repeated targets.Restriction restrictions = 3;
}

message Destination {
  message Hand {}
  message TopOfLibrary {}
  message Battlefield {
    bool enters_tapped = 1;
  }
  oneof destination {
    Hand hand = 2;
    TopOfLibrary top_of_library = 3;
    Battlefield battlefield = 4;
  }
}

message DestroyEach {
  repeated targets.Restriction restrictions = 1;
}

message DestroyTarget {
  repeated targets.Restriction restrictions = 1;
}

message Discover {
  int32 count = 1;
}

message Duration {
  message Permanently {}
  message UntilEndOfTurn {}
  message UntilSourceLeavesBattlefield {}
  message UntilTargetLeavesBattlefield {}
  oneof duration {
    Permanently permanently = 1;
    UntilEndOfTurn until_end_of_turn = 2;
    UntilSourceLeavesBattlefield until_source_leaves_battlefield = 3;
    UntilTargetLeavesBattlefield until_target_leaves_battlefield = 4;
  }
}

message DynamicPowerToughness {
  oneof source {
    NumberOfCountersOnThis number_of_counters_on_this = 1;
    NumberOfPermanentsMatching number_of_permanents_matching = 2;
  }
  message NumberOfCountersOnThis {
    counters.Counter counter = 1;
  }
  message NumberOfPermanentsMatching {
    controller.Controller controller = 1;
    repeated types.Type types = 2;
    repeated types.Subtype subtypes = 3;
  }
}

message Equip {
  repeated ModifyBattlefield modifiers = 1;
}

message ExileTarget {
  repeated targets.Restriction restrictions = 1;
  controller.Controller controller = 2;
  Duration duration = 3;
}

message ExileTargetCreatureManifestTopOfLibrary {}

message ExileTargetGraveyard {}

message Explore {}

message ExtraLandsPerTurn {
  int32 count = 1;
}

message ForEachManaOfSource {
  targets.ManaSource source = 1;
  Effect effect = 2;
}

message ForEachPlayerChooseThen {
  repeated targets.Restriction restrictions = 1;
  repeated Effect effects = 2;
}

message GainCounter {
  message Single {}
  message Dynamic {
    message X {}
    message LeftBattlefieldThisTurn {
      repeated targets.Restriction restrictions = 1;
      controller.Controller controller = 2;
    }

    oneof dynamic {
      LeftBattlefieldThisTurn left_battlefield_this_turn = 3;
      X x = 4;
    }
  }

  oneof count {
    Single single = 5;
    Dynamic dynamic = 6;
  }

  counters.Counter counter = 7;
  repeated targets.Restriction restrictions = 8;
  controller.Controller controller = 9;
}

message GainLife {
  int32 count = 1;
}

message GainMana {
  message GainMana {
    repeated mana.Mana gains = 1;
  }
  message Specific {
    repeated mana.Mana gains = 1;
  }
  message Choice {
    repeated GainMana choices = 1;
  }
  oneof gain {
    Specific specific = 2;
    Choice choice = 3;
  }
}

message GainManaAbility {
  cost.AbilityCost cost = 1;
  GainMana gain_mana = 2;
  targets.ManaSource mana_source = 3;
  optional mana.ManaRestriction mana_restriction = 4;
}

message Mill {
  int32 count = 1;
  controller.Controller target = 2;
}

message ModifyBattlefield {
  optional int32 base_power = 1;
  optional int32 base_toughness = 2;
  optional DynamicPowerToughness add_dynamic_power_toughness = 3;
  repeated types.Type add_types = 4;
  repeated types.Subtype add_subtypes = 5;
  repeated types.Type remove_types = 6;
  repeated types.Subtype remove_subtypes = 7;
  repeated color.Color add_colors = 8;
  bool remove_all_colors = 9;
  optional int32 add_power = 10;
  optional int32 add_toughness = 11;
  optional ActivatedAbility add_ability = 12;
  optional GainManaAbility mana_ability = 13;
  repeated StaticAbility add_static_abilities = 14;
  bool remove_all_subtypes = 15;
  bool entire_battlefield = 16;
  bool global = 17;
  string add_keywords = 18;
  string remove_keywords = 19;
}

message MultiplyTokens {
  int32 multiplier = 1;
}

message PayCostThen {
  cost.AbilityCost cost = 1;
  repeated Effect effects = 2;
}

message ReturnFromGraveyardToBattlefield {
  int32 count = 1;
  controller.Controller controller = 2;
  repeated targets.Restriction restrictions = 3;
  optional cost.XIs x_is = 4;
  bool enters_tapped = 5;
}

message ReturnFromGraveyardToHand {
  int32 count = 1;
  controller.Controller controller = 2;
  repeated targets.Restriction restrictions = 3;
}

message ReturnFromGraveyardToLibrary {
  int32 count = 1;
  controller.Controller controller = 2;
  repeated targets.Restriction restrictions = 3;
}

message ReturnSelfToHand {}

message ReturnTargetToHand {
  controller.Controller controller = 1;
  repeated targets.Restriction restrictions = 2;
}

message RevealEachTopOfLibrary {
  message ForEach {
    message IfNone {
      repeated Effect effects = 1;
    }
    repeated targets.Restriction restrictions = 2;
    repeated Effect effects = 3;
    IfNone if_none = 4;
  }
  ForEach for_each = 5;
}

message Scry {
  int32 count = 1;
}

message StaticAbility {
  message CantCastIfAttacked {}
  message ForceEtbTapped {
    controller.Controller controller = 1;
    repeated types.Type types = 2;
  }
  message GreenCannotBeCountered {
    controller.Controller controller = 1;
  }
  message PreventAttacks {}
  message PreventBlocks {}
  message PreventAbilityActivation {}
  message UntapEachUntapStep {}

  oneof ability {
    BattlefieldModifier battlefield_modifier = 1;
    CantCastIfAttacked cant_cast_if_attacked = 2;
    ExtraLandsPerTurn extra_lands_per_turn = 3;
    ForceEtbTapped force_etb_tapped = 4;
    GreenCannotBeCountered green_cannot_be_countered = 5;
    PreventAttacks prevent_attacks = 6;
    PreventBlocks prevent_blocks = 7;
    PreventAbilityActivation prevent_ability_activation = 8;
    UntapEachUntapStep untap_each_untap_step = 9;
  }
}

message TapTarget {
  repeated targets.Restriction restrictions = 1;
}

message TargetToTopOfLibrary {
  repeated targets.Restriction restrictions = 1;
}

message Transform {}

message TutorLibrary {
  repeated targets.Restriction restrictions = 1;
  Destination destination = 2;
  bool reveal = 3;
}

message ReturnTransformed {
  bool enters_tapped = 1;
}

message UntapTarget {}

message UntapThis {}

message Effect {
  oneof effect {
    BattlefieldModifier battlefield_modifier = 1;
    BattlefieldModifier modify_target = 2;
    CantAttackThisTurn cant_attack_this_turn = 3;
    Cascade cascade = 4;
    ControllerDrawCards controller_draw_cards = 5;
    ControllerLosesLife controller_loses_life = 6;
    CopyOfAnyCreatureNonTargeting copy_of_any_creature_non_targeting = 7;
    CounterSpell counter_spell = 8;
    CreateToken create_token = 9;
    CreateToken target_controller_gains_tokens = 10;
    CreateTokenCopy create_token_copy = 11;
    Cycling cycling = 12;
    DealDamage deal_damage = 13;
    DestroyEach destroy_each = 14;
    DestroyTarget destroy_target = 15;
    Discover discover = 16;
    Equip equip = 17;
    ExileTarget exile_target = 18;
    ExileTargetCreatureManifestTopOfLibrary
        exile_target_creature_manifest_top_of_library = 19;
    ExileTargetGraveyard exile_target_graveyard = 20;
    Explore self_explores = 21;
    Explore target_explores = 22;
    ForEachManaOfSource for_each_mana_of_source = 23;
    ForEachPlayerChooseThen for_each_player_choose_then = 24;
    GainCounter target_gains_counters = 25;
    GainLife gain_life = 26;
    Mill mill = 27;
    Modes modal = 28;
    MultiplyTokens multiply_tokens = 29;
    PayCostThen pay_cost_then = 30;
    ReturnFromGraveyardToBattlefield return_from_graveyard_to_battlefield = 31;
    ReturnFromGraveyardToHand return_from_graveyard_to_hand = 32;
    ReturnFromGraveyardToLibrary return_from_graveyard_to_library = 33;
    ReturnSelfToHand return_self_to_hand = 34;
    ReturnTargetToHand return_target_to_hand = 35;
    ReturnTransformed return_transformed = 36;
    RevealEachTopOfLibrary reveal_each_top_of_library = 37;
    Scry scry = 38;
    TapTarget tap_target = 39;
    TargetToTopOfLibrary target_to_top_of_library = 40;
    Transform transform = 41;
    TutorLibrary tutor_library = 42;
    UntapThis untap_this = 43;
    UntapTarget untap_target = 44;
  }

  optional Effect threshold = 45;
  string oracle_text = 46;
}

message Mode {
  repeated Effect effects = 1;
}

message Modes {
  repeated Mode modes = 1;
}

message ReplacementEffect {
  message Draw {}
  message Etb {}
  message TokenCreation {}

  oneof replacing {
    Draw draw = 1;
    Etb etb = 2;
    TokenCreation token_creation = 3;
  }

  controller.Controller controller = 4;
  repeated targets.Restriction restrictions = 5;
  repeated Effect effects = 6;
}