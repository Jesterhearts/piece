syntax = "proto3";

package effects;

import "color.proto";
import "controller.proto";
import "mana.proto";
import "targets.proto";
import "types.proto";

message Destination {
  message Hand {
  }
  message TopOfLibrary{
  }
  message Battlefield {
  }

  oneof destination {
    Hand hand = 1;
    TopOfLibrary top_of_library = 2;
    Battlefield battlefield = 3;
  }
}

message TutorLibrary {
  repeated targets.Restriction restrictions = 1;
  Destination destination = 2;
  bool reveal = 3;
}

message Mill {
  int32 count = 1;
  controller.Controller target = 2;
}

message ReturnFromGraveyardToLibrary {
  int32 count = 1;
  controller.Controller controller = 2;
  repeated types.Type types = 3;
}

message ReturnFromGraveyardToBattlefield {
  int32 count = 1;
  repeated types.Type types = 2;
}

message Vigilance {
}

message Flash {
}

message Duration {
  message UntilEndOfTurn {
  }
  message UntilSourceLeavesBattlefield {
  }

  oneof duration {
    UntilEndOfTurn until_end_of_turn = 1;
    UntilSourceLeavesBattlefield until_source_leaves_battlefield = 2;
  }
}

message CounterSpell {
  targets.SpellTarget target = 1;
}

message GainMana {
  message GainMana {
    repeated mana.Mana gains = 1;
  }
  message Specific {
    repeated mana.Mana gains = 1;
  }
  message Choice {
    repeated GainMana choices = 1;
  }

  oneof gain {
    Specific specific = 1;
    Choice choice = 2;
  }
}

message ModifyBasePowerToughness {
  int32 power = 1;
  int32 toughness = 2;
}

message ModifyCreatureTypes {
  repeated types.Type add_types = 1;
  repeated types.Subtype add_subtypes = 2;
}

message RemoveAllSubtypes {
}

message ModifyBattlefield {
  oneof modifier {
    ModifyBasePowerToughness modify_base_power_toughness = 1;
    ModifyCreatureTypes modify_creature_types = 2;
    AddPowerToughness add_power_toughness = 3;
    RemoveAllSubtypes remove_all_subtypes = 4;
    Vigilance vigilance = 5;
  }
}

message BattlefieldModifier {
  ModifyBattlefield modifier = 1;
  controller.Controller controller = 2;
  Duration duration = 3;
  repeated targets.Restriction restrictions = 4;
}

message CreateToken {
  message Creature {
    string name = 1;
    repeated types.Type types = 2;
    repeated types.Subtype subtypes = 3;
    repeated color.Color colors = 4;
    int32 power = 5;
    int32 toughness = 6;
  }

  oneof token {
    Creature creature = 1;
  }
}

message ControllerDrawCards {
  int32 count = 1;
}

message Equip {
  repeated ModifyBattlefield modifiers = 1;
}

message AddPowerToughness {
  int32 power = 1;
  int32 toughness = 2;
}

message ExileTargetCreature {
}

message ExileTargetCreatureManifestTopOfLibrary {
}

message ActivatedAbilityEffect {
  oneof effect {
    CounterSpell counter_spell = 1;
    GainMana gain_mana = 2;
    BattlefieldModifier battlefield_modifier = 3;
    ControllerDrawCards controller_draw_cards = 4;
    Equip equip = 5;
    AddPowerToughness add_power_toughness_to_target = 6;
  }
}

message TriggeredEffect {  
  oneof effect {
    CreateToken create_token = 1;
  }
}

message SpellEffect {
  oneof effect {
    CounterSpell counter_spell = 1;
    GainMana gain_mana = 2;
    BattlefieldModifier battlefield_modifier = 3;
    BattlefieldModifier modify_creature = 4;
    ControllerDrawCards controller_draw_cards = 5;
    AddPowerToughness add_power_toughness_to_target = 6;
    ExileTargetCreature exile_target_creature = 7;
    ExileTargetCreatureManifestTopOfLibrary
      exile_target_creature_manifest_top_of_library = 8;
  }
}